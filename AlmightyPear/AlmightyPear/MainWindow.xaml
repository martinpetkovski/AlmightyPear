<mah:MetroWindow x:Class="AlmightyPear.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AlmightyPear"
        xmlns:controls="clr-namespace:AlmightyPear.Controls"
        xmlns:converters="clr-namespace:AlmightyPear.Converters"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
                 x:Name="rootWnd"
        Title="Checkmeg PRE-ALPHA"
        Background="{DynamicResource mg.solid.10}"
        BorderThickness="1"
        TitleBarHeight="48"
        MinHeight="800"
        MinWidth="800"
        SaveWindowPosition="True"
                 StateChanged="RootWnd_StateChanged"
        >
    <mah:MetroWindow.Resources>
        <ResourceDictionary>
            <converters:IsLoggedInToStateConverter x:Key="IsLoggedInToStateConverter"/>
            <converters:AnimationLevelToBoolenConverter x:Key="AnimationLevelToBoolenConverter"/>
        </ResourceDictionary>
    </mah:MetroWindow.Resources>
    <mah:MetroWindow.WindowTransitionsEnabled>
        <Binding Source="{StaticResource Env}" 
                 Path="UserData.CustomModel.AnimationsLevel" 
                 Converter="{StaticResource AnimationLevelToBoolenConverter}"
                 ConverterParameter="1"/>
    </mah:MetroWindow.WindowTransitionsEnabled>
    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Menu Grid.Column="2" Foreground="White" IsEnabled="{Binding Source={StaticResource Env}, Path=UserData.IsLoggedIn, Converter={StaticResource IsLoggedInToStateConverter}}">
                <MenuItem Background="Transparent">
                    <MenuItem.Header>
                        <Image  Source="Resources\Textures\logo.png" Height="36"/>
                    </MenuItem.Header>
                    <MenuItem Name="mi_ClearTempBin" Click="Mi_ClearTempBin_Click">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="TimesCircleOutline" Foreground="{DynamicResource mg.solid.100}" Height="12"/>
                                <TextBlock Text="Clear TEMP bin" VerticalAlignment="Center" Margin="5,0,0,0"></TextBlock>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator></Separator>
                    <MenuItem Name="mi_minimize" Click="Mi_minimize_Click">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="WindowMinimize" Foreground="{DynamicResource mg.solid.100}" Height="12" Width="12"/>
                                <TextBlock Text="Minimize to tray" VerticalAlignment="Center" Margin="5,0,0,0"></TextBlock>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Name="mi_LogOut" Click="Mi_LogOut_Click">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="SignOut" Foreground="{DynamicResource mg.solid.100}" Height="12"/>
                                <TextBlock Text="Log out" VerticalAlignment="Center" Margin="5,0,0,0"></TextBlock>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Name="mi_Quit" Click="Mi_Quit_Click">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Times" Foreground="Red" Height="12"/>
                                <TextBlock Text="Quit" VerticalAlignment="Center" Margin="5,0,0,0"></TextBlock>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
            </Menu>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands Visibility="{Binding Source={StaticResource Env}, Path=UserData.IsLoggedIn, Converter={StaticResource IsLoggedInToStateConverter}, ConverterParameter=False}">
            <StackPanel 
                Orientation="Horizontal"  
                HorizontalAlignment="Left" 
                VerticalAlignment="Center" 
                Margin="0,0,30,0"
                >
                <TextBlock Text="{Binding Source={StaticResource Env}, Path=UserData.DisplayName}" VerticalAlignment="Center"></TextBlock>
                <TextBlock Text="  ●  " VerticalAlignment="Center"></TextBlock>
                <TextBlock Text="{Binding Source={StaticResource Env}, Path=UserData.Email}" VerticalAlignment="Center"></TextBlock>
            </StackPanel>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <Grid>
        <tb:TaskbarIcon
              IconSource="logo_icon.ico"
              MenuActivation="RightClick"
              TrayLeftMouseDown="TaskbarIcon_TrayLeftMouseDown"
              ToolTipText="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Title}" >
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Name="mi_ShowCheckmeg"
                              Click="Mi_ShowCheckmeg_Click"
                              Foreground="{DynamicResource mg.solid.100}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Television" Foreground="{DynamicResource mg.solid.100}" Height="12"/>
                                <TextBlock Text="Show" VerticalAlignment="Center" Margin="5,0,0,0"></TextBlock>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Name="mi_TrayCreate"
                              Visibility="{Binding Source={StaticResource Env}, Path=UserData.IsLoggedIn, Converter={StaticResource IsLoggedInToStateConverter}, ConverterParameter=False}"
                              Click="Mi_TrayCreate_Click"
                              Foreground="{DynamicResource mg.solid.100}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Plus" Height="12" Foreground="Green"/>
                                <TextBlock Text="Create..." VerticalAlignment="Center" Margin="5,0,0,0"></TextBlock>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Name="mi_TrayFind"
                              Visibility="{Binding Source={StaticResource Env}, Path=UserData.IsLoggedIn, Converter={StaticResource IsLoggedInToStateConverter}, ConverterParameter=False}"
                              Click="Mi_TrayFind_Click"
                              Foreground="{DynamicResource mg.solid.100}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Search" Foreground="{DynamicResource mg.solid.100}" Height="12" />
                                <TextBlock Text="Find..." VerticalAlignment="Center" Margin="5,0,0,0"></TextBlock>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator></Separator>
                    <MenuItem Name="mi_TraySignOut"
                              Visibility="{Binding Source={StaticResource Env}, Path=UserData.IsLoggedIn, Converter={StaticResource IsLoggedInToStateConverter}, ConverterParameter=False}"
                              Click="Mi_TraySignOut_Click"
                              Foreground="{DynamicResource mg.solid.100}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="SignOut" Foreground="{DynamicResource mg.solid.100}" Height="12"/>
                                <TextBlock Text="Log Out" VerticalAlignment="Center" Margin="5,0,0,0"></TextBlock>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Name="mi_TrayQuit" 
                              Click="Mi_TrayQuit_Click" 
                              Foreground="{DynamicResource mg.solid.100}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Times" Foreground="Red" Height="12"/>
                                <TextBlock Text="Quit" VerticalAlignment="Center" Margin="5,0,0,0"></TextBlock>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>


        <mah:MetroContentControl Name="mah_contentControl">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Style.Triggers>

                        <!-- SIGN IN VIEW -->
                        <DataTrigger Binding="{Binding  Source={StaticResource Env},
                                                        Path=MainWindowData.WindowState}" Value="SignIn">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <controls:UserAuthControl></controls:UserAuthControl>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- PASSWORD RESET VIEW -->
                        <DataTrigger Binding="{Binding  Source={StaticResource Env},
                                                        Path=MainWindowData.WindowState}" Value="ChangePw">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <controls:ResetPasswordControl></controls:ResetPasswordControl>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- REGISTER VIEW -->
                        <DataTrigger Binding="{Binding  Source={StaticResource Env},
                                                        Path=MainWindowData.WindowState}" Value="Register">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <controls:UserRegisterControl></controls:UserRegisterControl>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- MAIN VIEW -->
                        <DataTrigger Binding="{Binding  Source={StaticResource Env},
                                                        Path=MainWindowData.WindowState}" Value="BookmarksView">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <controls:MainViewControl x:Name="ctrl_mainView"></controls:MainViewControl>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- LOADING VIEW -->
                        <DataTrigger Binding="{Binding  Source={StaticResource Env},
                                                        Path=MainWindowData.WindowState}" Value="Loading">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <controls:LoadingControl x:Name="ctrl_Loading"></controls:LoadingControl>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </mah:MetroContentControl>
    </Grid>

</mah:MetroWindow>
