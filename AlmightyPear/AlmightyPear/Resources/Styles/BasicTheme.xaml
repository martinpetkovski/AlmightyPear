<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AlmightyPear.Resources.Styles"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:converters="clr-namespace:AlmightyPear.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DarkTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>
   

    <converters:TreeViewLineConverter x:Key="LineConverter"/>

    <SolidColorBrush x:Key="SolidLightest" Color="{StaticResource ColLightest}" />
    <SolidColorBrush x:Key="SolidDarkest" Color="{StaticResource ColDarkest}" />
    <SolidColorBrush x:Key="SolidDarkMono" Color="{StaticResource ColDarkMono}" />
    <SolidColorBrush x:Key="SolidLoMidMono" Color="{StaticResource ColLoMidMono}" />
    <SolidColorBrush x:Key="SolidHiMidMono" Color="{StaticResource ColHiMidMono}" />
    <SolidColorBrush x:Key="SolidLightMono" Color="{StaticResource ColLightMono}" />

    <LinearGradientBrush x:Key="GradInset" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource ColLoMidMono}" Offset="0.0" />
        <GradientStop Color="{StaticResource ColHiMidMono}" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GradOutset" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource ColHiMidMono}" Offset="0.0" />
        <GradientStop Color="{StaticResource ColLoMidMono}" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GradOutsetGreen" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#080" Offset="0.0" />
        <GradientStop Color="#020" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GradInsetSide" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="{StaticResource ColLoMidMono}" Offset="0.0" />
        <GradientStop Color="{StaticResource ColHiMidMono}" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GradOutsetSide" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="{StaticResource ColHiMidMono}" Offset="0.0" />
        <GradientStop Color="{StaticResource ColLoMidMono}" Offset="1.0" />
    </LinearGradientBrush>
    
    

    <!-- BASIC -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource SolidLightest}"></Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource SolidLightest}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{StaticResource GradOutset}"
                    BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center" 
                                 RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource GradOutset}"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource GradOutset}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource GradOutset}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource GradInset}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource GradOutset}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{StaticResource GradInset}"/>
        <Setter Property="Foreground" Value="{StaticResource SolidLightest}"/>
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource SolidDarkest}"/>
        <Setter Property="FontFamily" Value="{StaticResource ProximaNova}"/>
        <Setter Property="CaretBrush" Value="{StaticResource SolidLightest}"/>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource GradInset}"/>
        <Setter Property="Foreground" Value="{StaticResource SolidLightest}"/>
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource SolidDarkest}"/>
        <Setter Property="FontFamily" Value="{StaticResource ProximaNova}"/>
        <Setter Property="CaretBrush" Value="{StaticResource SolidLightest}"/>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource GradInset}" />
        <Setter Property="Foreground" Value="{StaticResource SolidLightest}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="13" Height="13">
                                <Border x:Name="Border" Background="{DynamicResource GradInset}" BorderBrush="{DynamicResource GradInsetSide}" BorderThickness="1"/>
                                <Path x:Name="CheckMark" Stroke="{DynamicResource SolidLightest}" StrokeThickness="2" SnapsToDevicePixels="True" Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" Margin="3,0,0,0" ClipToBounds="false" StrokeEndLineCap="Square" StrokeStartLineCap="Square"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <!-- This uses Visibility to hide and show the CheckMark on IsChecked -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SolidHiMidMono}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource GradInset}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GradInsetSide}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource GradOutset}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GradInsetSide}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource SolidDarkMono}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- TREEVIEW ITEMS -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                        <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true" Fill="White"/>
                        <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                        <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TreeViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid Name="rootGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border 
                            Grid.Column="0"
                            Name="Bd"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="0"
                            Padding="2">
                            <ContentPresenter Name="PART_Header"
                                 ContentSource="Header"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"/>
                        </Border>

                        <ItemsPresenter Grid.Column="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{StaticResource SolidLoMidMono}"></Setter>
                            <Setter Property="BorderBrush" Value="Transparent"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource GradOutset}"></Setter>
                            <Setter Property="BorderBrush" Value="{StaticResource GradOutsetSide}"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Bd"
                                    Property="TextElement.Foreground"
                                    Value="White" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd"
                                    Property="Panel.Background"
                                    Value="{StaticResource GradInset}" />
                            <Setter TargetName="Bd"
                                    Property="Border.BorderBrush" 
                                    Value="{StaticResource GradInsetSide}" />
                            <Setter TargetName="Bd"
                                    Property="TextElement.Foreground"
                                    Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Stretch"
                                IsItemsHost="True"
                                Margin="0"
                                Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MENUS -->
    <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">None</PopupAnimation>
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border BorderThickness="1" Margin="10">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ColLoMidMono}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource ColDarkMono}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource ColHiMidMono}"
                            Offset="0" />
                                <GradientStop Color="{DynamicResource ColLoMidMono}"
                            Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <StackPanel ClipToBounds="True"
                      Orientation="Vertical"
                      IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Background" Value="{StaticResource GradOutsetSide}"></Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <Popup x:Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False">
                    <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="1"
                Background="{DynamicResource MenuPopupBrush}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter TargetName="Border"
              Property="BorderBrush"
              Value="Transparent" />
                <Setter Property="Background"
              TargetName="Border" Value="{DynamicResource GradOutset}">

                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0,0,4,4" />
                <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ColHiMidMono}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{StaticResource ControlLightColor}" />
                                    <GradientStop Color="{StaticResource ControlMouseOverColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
          BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                <Border x:Name="Check"
              Width="13"
              Height="13"
              Visibility="Collapsed"
              Margin="6,0,6,0"
              BorderThickness="1"
              BorderBrush="{DynamicResource GradOutset}"
              Background="{DynamicResource GradOutset}">
                    <Path x:Name="CheckMark"
              Width="7"
              Height="7"
              Visibility="Hidden"
              SnapsToDevicePixels="False"
              StrokeThickness="2"
              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                        <Path.Stroke>
                            <SolidColorBrush Color="{DynamicResource ColLightest}" />
                        </Path.Stroke>
                    </Path>
                </Border>
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                 VerticalAlignment="Center"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Foreground="{StaticResource SolidLightest}"
                 DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
            <Trigger Property="Icon"
             Value="{x:Null}">
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked"
             Value="true">
                <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable"
             Value="true">
                <Setter TargetName="Check"
              Property="Visibility"
              Value="Visible" />
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource ColDarkMono}"
                          Offset="0" />
                            <GradientStop Color="{DynamicResource ColHiMidMono}"
                          Offset="0.2" />
                            <GradientStop Color="{DynamicResource ColDarkMono}"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource ColHiMidMono}"
                          Offset="0" />
                            <GradientStop Color="Transparent"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource ColHiMidMono}"
                          Offset="0" />
                            <GradientStop Color="{DynamicResource ColDarkMono}"
                          Offset="0.2" />
                            <GradientStop Color="{DynamicResource ColHiMidMono}"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ColHiMidMono}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
          BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 DockPanel.Dock="Right"
                 VerticalAlignment="Center"
                 Foreground="{StaticResource SolidLightest}"/>
                <Path Grid.Column="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 0 7 L 4 3.5 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource ColDarkMono}" />
                    </Path.Fill>
                </Path>
                <Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="-4"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False">
                    <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="{DynamicResource MenuPopupBrush}"
                BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource ColHiMidMono}" />
                        </Border.BorderBrush>
                        <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
             Value="{x:Null}">
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="Transparent"
                          Offset="0" />
                            <GradientStop Color="{DynamicResource ColHiMidMono}"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource ColLoMidMono}"
                          Offset="0" />
                            <GradientStop Color="Transparent"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="4" />
                <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ColHiMidMono}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}"
       TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Style.Triggers>
            <Trigger Property="Role"
             Value="TopLevelHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
            </Trigger>
            <Trigger Property="Role"
             Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- TAB CONTROLS -->
    <Style  TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource SolidDarkMono}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SolidLoMidMono}"/>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{StaticResource GradOutset}"/>
        <Setter Property="Foreground" Value="{StaticResource SolidLightest}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SolidHiMidMono}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" 
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                            Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding}"
                            BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"
                            >
                        <ContentPresenter x:Name="ContentSite" 
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" 
                                    ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource GradInset}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SCROLLBARS -->

    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ColLightMono}"
                Offset="0" />
        <GradientStop Color="{DynamicResource ColHiMidMono}"
                Offset="0.5" />
        <GradientStop Color="{DynamicResource ColLightMono}"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                    Offset="0" />
                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                <GradientStop Color="#000000FF"
                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ScrollBarLineButton"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border"
                Margin="1"
                CornerRadius="2"
                BorderThickness="1">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ColHiMidMono}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource ColLoMidMono}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ColLoMidMono}"/>
                                        <GradientStop Color="{DynamicResource ColDarkMono}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ColDarkMono}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ColDarkest}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Arrow"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="{Binding Content, 
            RelativeSource={RelativeSource TemplatedParent}}" >
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource ColLightest}"/>
                            </Path.Fill>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="IsTabStop"
          Value="false" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb"
       TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="IsTabStop"
          Value="false" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
            CornerRadius="2"
            Background="{StaticResource GradInsetSide}" />
            <RepeatButton Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track x:Name="PART_Track"
           Grid.Row="1"
           IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="1,0,1,0">
                        <Thumb.BorderBrush>

                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ColLoMidMono}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource ColDarkMono}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Thumb.BorderBrush>
                        <Thumb.Background>

                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ColHiMidMono}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource ColLoMidMono}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Thumb.Background>
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
                 TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
            CornerRadius="2"
            Background="{StaticResource GradInsetSide}" />
            <RepeatButton Grid.Column="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track x:Name="PART_Track"
           Grid.Column="1"
           IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="0,1,0,1">

                        <Thumb.BorderBrush>

                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ColHiMidMono}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource ColDarkest}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Thumb.BorderBrush>
                        <Thumb.Background>

                            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource ColHiMidMono}"
                                Offset="0.0" />
                                        <GradientStop Color="{DynamicResource ColLoMidMono}"
                                Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>

                        </Thumb.Background>
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
             Value="Horizontal">
                <Setter Property="Width"
              Value="Auto" />
                <Setter Property="Height"
              Value="18" />
                <Setter Property="Template"
              Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
             Value="Vertical">
                <Setter Property="Width"
              Value="18" />
                <Setter Property="Height"
              Value="Auto" />
                <Setter Property="Template"
              Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>